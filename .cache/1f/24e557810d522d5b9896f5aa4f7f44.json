{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/Users/swann/Université/Master2 /IA /Data Vizualisation/TP3/index.html","resolved":"/Users/swann/Université/Master2 /IA /Data Vizualisation/TP3/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/swann/Université/Master2 /IA /Data Vizualisation/TP3/package.json","includedInParent":true,"mtime":1638435876916}],"generated":{"html":"<!DOCTYPE html>\n<head>\n  <meta charset=\"utf-8\">\n  <script src=\"https://d3js.org/d3.v7.min.js\"></script>\n  <style>body {\n      margin: 0;\n      position: fixed;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }</style>\n</head>\n\n<body>\n  <script>var width = 700,\n    height = 580;\nvar svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height); // On rajoute un groupe englobant toute la visualisation pour plus tard\n\nvar g = svg.append(\"g\"); // Autres projections : geoMercator, geoNaturalEarth1, ...\n// https://github.com/d3/d3-geo/blob/master/README.md\n\nvar projection = d3.geoConicConformal().center([2.454071, 46.279229]).scale(2800); // On definie une echelle de couleur\n// via https://observablehq.com/@d3/color-schemes?collection=@d3/d3-scale-chromatic\n\nvar color = d3.scaleQuantize().range([\"#edf8e9\", \"#bae4b3\", \"#74c476\", \"#31a354\", \"#006d2c\"]);\nvar path = d3.geoPath().projection(projection);\nvar jourChoisi = \"2021-09-12\"; // pour demarrer on code en dur un jour a afficher\n// Chargement des donnees\n\nd3.csv(\"covid_se.csv\").then(function (data) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n  var cleanData = data.filter(function (d) {\n    return d.sexe == 0;\n  }); // TODO ne garder que les lignes ou (sexe == 0)\n\n  console.log(cleanData);\n  color.domain([0, 2000]);\n  d3.json(\"fr_dep.geojson\").then(function (json) {\n    //On fusionne les donnees avec le GeoJSON des departements\n    //On parcours les departements du GeoJSON un par un\n    for (var j = 0; j < json.features.length; j++) {\n      var departement = json.features[j].properties; // find permet d'eviter de faire une boucle sur toutes les donnees\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#find_an_object_in_an_array_by_one_of_its_properties\n\n      var jourDepChoisi = cleanData.find(function (row) {\n        if (row.jour == jourChoisi && row.dep == departement.code) {\n          return row;\n        } // find renvoie la ligne du tableau si la fonction qu'on lui passe en argument renvoie True.\n\n      });\n      json.features[j].properties.value = jourDepChoisi.hosp;\n    } //on dessine\n\n\n    svg.selectAll(\"path\").data(json.features).join(\"path\").attr(\"d\", path).style(\"fill\", function (d) {\n      var value = d.properties.value;\n\n      if (value) {\n        return color(value);\n      } else {\n        return \"#ccc\";\n      }\n    });\n  });\n});</script>\n</body>\n"},"sourceMaps":null,"error":null,"hash":"ff794d0046424c071d0852b9fcec7eab","cacheData":{"env":{}}}